<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gospec.mapper.UserMapper">

	<select id="findByUsername" resultType="com.gospec.domain.UserDto">
		select * 
		from user_info 
		where username = #{username}
	</select>
	
	<insert id="save">
		insert into user_info (username,password,nickname,profile_img,self_introduction,name,phone,birthday,age,address,major,gender)
		values (#{username},#{password},#{nickname},#{profileImg},#{selfIntroduction},#{name},#{phone},#{birthday},#{age},#{address},#{major},#{gender})
	</insert>
	
	<select id="checkId" resultType="Integer">
		select count(*)
		from user_info
		where username = #{username}
	</select>
	
	<select id="checkNickName" resultType="Integer">
		select count(*)
		from user_info
		where nickname = #{nickname}
	</select>
	
	<update id="newPwd">
		update user_info
		set password = #{password}
		where username = #{username}
	</update>
	
	<delete id="deleteByUsername">
		delete from user_info
		where username = #{username}
	</delete>
	
	<select id="checkPwd" resultType= "Integer">
		select count(*)
		from user_info
		where username = #{username}
		and password = #{password}
	</select>
	
	<update id="updateByUsername">
		update user_info
		set nickname = #{nickname}, profile_img = #{profileImg}, self_introduction = #{selfIntroduction}, name= #{name}, phone = #{phone}, birthday = #{birthday}, age=#{age}, address=#{address}, major=#{major}, gender=#{gender}
		where username = #{username}
	</update>
	
	<select id="findAllActiveRegion" resultType="String">
		select region
		from active_region
		where username = #{username}
	</select>
	
	<select id="findAllBookMark" resultType="com.gospec.domain.BookMarkDto">
		select *
		from bookmark_contest
		where username = #{username}
	</select>
	
	<select id="findAllInterestField" resultType="String">
		select field
		from interest_field
		where no = (select u.no from user_info u where username = #{username})
	</select>
	
	<select id="findAllLicense" resultType="String">
		select licensename
		from license
		where username = #{username}
	</select>
	
	<select id="findAllCareer" resultType="com.gospec.domain.CareerDto">
		select username, careername, status, start_year
		from career
		where username = #{username}
	</select>
	
	<delete id="deleteInterestField">
		delete from interest_field
		where no = (select u.no from user_info u where username = #{username})
	</delete>
	
	<delete id="deleteActiveRegion">
		delete from active_region
		where username = #{username}
	</delete>
	
	<delete id="deleteLicense">
		delete from license
		where username = #{username}
	</delete>
	
	<delete id="deleteCareer">
		delete from career
		where username = #{username}
	</delete>
	
	<insert id="saveInterestField" parameterType="java.util.List">
		insert into interest_field (no, field) 
		values
		<foreach collection="list" item="item" separator=",">
			((select u.no from user_info u where username = "${item.username}"), "${item.field}")
		</foreach>
	</insert>
	
	<insert id="saveActiveRegion" parameterType="java.util.List">
		insert into active_region (username, region) 
		values
		<foreach collection="list" item="item" separator=",">
			("${item.username}", "${item.region}")
		</foreach>
	</insert>
	
	<insert id="saveLicense" parameterType="java.util.List">
		insert into license (username, licensename) 
		values
		<foreach collection="list" item="item" separator=",">
			("${item.username}", "${item.licensename}")
		</foreach>
	</insert>
	
	<insert id="saveCareer" parameterType="java.util.List">
		insert into career (username, status, start_year, careername) 
		values
		<foreach collection="list" item="item" separator=",">
			("${item.username}", "${item.status}", "${item.startYear}", "${item.careername}")
		</foreach>
	</insert>
		
	<select id="findByInterestFieldWithCluster" resultType="com.gospec.domain.InterestFieldDto">
		select no, field
		from interest_field
	</select>
	
	<insert id="makeCluster" parameterType="java.util.List">
		insert into cluster_table values
		<foreach collection="list" item="item" separator=",">
			("${item.no}", "${item.cluster}")
		</foreach>
	</insert>
	
	<delete id="resetCluster">
		delete from cluster_table
	</delete>

</mapper>
